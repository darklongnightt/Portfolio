{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/layout/Footer.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/Register.js","store/actions/projectActions.js","components/projects/CreateProject.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/firebaseConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","profile","className","to","aria-hidden","href","onClick","initials","SignedOutLinks","state","console","log","firebase","links","uid","Footer","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","firstName","lastName","createdAt","calendar","ProjectList","projects","pathname","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","emailSignIn","authError","onSubmit","htmlFor","onChange","credentials","signInWithEmailAndPassword","catch","err","Register","error","emailRegister","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","createProject","userId","add","Date","CreateProject","history","push","isLoaded","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","firebaseConfig","rrfProps","config","userProfile","useFirestoreForProfile","attachAuthIsReady","createFirestoreInstance","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.305f21be.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signOut } from \"../../store/actions/authActions\";\r\n\r\nconst SignedInLinks = props => {\r\n  const { profile } = props;\r\n\r\n  return (\r\n    <div>\r\n      <ul className=\"right\">\r\n        <li>\r\n          <NavLink to=\"/create_project\">\r\n            <i className=\"fa fa-product-hunt nav-icon\" aria-hidden=\"true\"></i>\r\n            New Project\r\n          </NavLink>\r\n        </li>\r\n\r\n        <li>\r\n          <a href=\"# \" onClick={props.signOut}>\r\n            <i className=\"fa fa-sign-out nav-icon\" aria-hidden=\"true\"></i>\r\n            Sign Out\r\n          </a>\r\n        </li>\r\n\r\n        <li>\r\n          <NavLink to=\"/\" className=\"btn btn-floating blue lighten-2\">\r\n            {profile.initials}\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\r\n","export const emailRegister = newUser => {\r\n  return (dispatch, getState, { getFirestore, getFirebase }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n\r\n    // Async call to firebase create new user\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n      .then(resp => {\r\n        // Store user information into the db\r\n        return firestore\r\n          .collection(\"users\")\r\n          .doc(resp.user.uid)\r\n          .set({\r\n            email: newUser.email,\r\n            firstName: newUser.firstName,\r\n            lastName: newUser.lastName,\r\n            initials: newUser.firstName[0] + newUser.lastName[0]\r\n          });\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"REGISTER_SUCCESS\" });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"REGISTER_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n\r\nexport const emailSignIn = credentials => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n\r\n    // Async call to firebase signin with email and password\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n      .then(() => {\r\n        dispatch({ type: \"LOGIN_SUCCESS\" });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"LOGIN_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n\r\n    // Async call to firebase logout\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch({ type: \"LOGOUT_SUCCESS\" });\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <div>\r\n      <ul className=\"right\">\r\n        <li>\r\n          <NavLink to=\"/register\">\r\n            <i className=\"fa fa-user-plus nav-icon\" aria-hidden=\"true\"></i>\r\n            Register\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/signin\">\r\n            <i className=\"fa fa-sign-in nav-icon\" aria-hidden=\"true\"></i>\r\n            Sign In\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignedOutLinks;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport SignedInLinks from \"./SignedInLinks\";\r\nimport SignedOutLinks from \"./SignedOutLinks\";\r\n\r\nconst Navbar = props => {\r\n  const { auth, profile } = props;\r\n  const links = auth.uid ? (\r\n    <SignedInLinks profile={profile} />\r\n  ) : (\r\n    <SignedOutLinks />\r\n  );\r\n\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3 nav-property\">\r\n      <div className=\"container\">\r\n        <Link\r\n          to=\"/\"\r\n          className=\"brand-logo brand-text blue-text text-lighten-3 bold\"\r\n        >\r\n          .profolio\r\n        </Link>\r\n        {links}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  console.log(state);\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return <div></div>;\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst Notifications = props => {\r\n  const { notifications } = props;\r\n  if (notifications) console.log(notifications);\r\n\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0 notification-board\">\r\n        <div className=\"card-content\">\r\n          <h5 className=\"bold\">\r\n            <i className=\"material-icons\">notifications_none</i> Notifications\r\n          </h5>\r\n          <ul className=\"notifications brand-text\">\r\n            {notifications &&\r\n              notifications.map(item => {\r\n                return (\r\n                  <li key={item.id}>\r\n                    <span className=\"blue-text bold\">{item.user}</span>\r\n                    <span> {item.content}</span>\r\n                    <div className=\"grey-text\">{moment(item.time.toDate()).fromNow()}</div>\r\n                    <br/>\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst ProjectSummary = ({ project }) => {\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title\">{project.title}</span>\r\n        <p>Posted by {project.firstName + \" \" + project.lastName}</p>\r\n        <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectSummary;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ProjectSummary from \"./ProjectSummary\";\r\n\r\nconst ProjectList = ({ projects }) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n      {projects &&\r\n        projects.map(project => {\r\n          return (\r\n            <Link\r\n              to={{\r\n                pathname: `/project/${project.id}`,\r\n                state: { project: project }\r\n              }}\r\n              key={project.id}\r\n            >\r\n              <ProjectSummary project={project} />\r\n            </Link>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Notifications from \"./Notifications\";\r\nimport ProjectList from \"../projects/ProjectList\";\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    const { projects, auth, notifications } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={projects} />\r\n          </div>\r\n\r\n          <div className=\"col s12 m5 offset-m1\">\r\n            <Notifications notifications={notifications} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: \"projects\", orderBy: [\"createdAt\", \"desc\"] },\r\n    { collection: \"notifications\", limit: 6, orderBy: [\"time\", \"desc\"] }\r\n  ])\r\n)(Dashboard);\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst ProjectDetails = props => {\r\n  const id = props.match.params.id;\r\n  const { project, auth } = props;\r\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n\r\n  if (project) {\r\n    return (\r\n      <div className=\"container section\">\r\n        <div className=\"card z-depth-0 project-details\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">{project.title + \" - \" + id}</span>\r\n            <p>{project.content}</p>\r\n          </div>\r\n\r\n          <div className=\"card-action grey lighten-4 grey-text \">\r\n            <div>Posted by {project.firstName + \" \" + project.lastName}</div>\r\n            <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"container center\">\r\n        <div className=\"preloader-wrapper big active preloader-margin\">\r\n          <div className=\"spinner-layer spinner-blue-only\">\r\n            <div className=\"circle-clipper left\">\r\n              <div className=\"circle\"></div>\r\n            </div>\r\n            <div className=\"gap-patch\">\r\n              <div className=\"circle\"></div>\r\n            </div>\r\n            <div className=\"circle-clipper right\">\r\n              <div className=\"circle\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects && projects[id];\r\n\r\n  return {\r\n    project: project,\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect(props => {\r\n    return [{ collection: \"projects\" }];\r\n  })\r\n)(ProjectDetails);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { emailSignIn } from \"../../store/actions/authActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\"\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.emailSignIn(this.state);\r\n  };\r\n\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n\r\n    return (\r\n      <div className=\"container center\">\r\n        <div className=\"row\">\r\n          <div className=\"col offset-m3 m6 s12\">\r\n            <form onSubmit={this.handleSubmit} className=\"white auth-form\">\r\n              <h5>Sign In</h5>\r\n              <div className=\"grey-text\">to continue to Portfolio Manager</div>\r\n              <br />\r\n              <div className=\"input-field\">\r\n                <i className=\"material-icons prefix\">email</i>\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n              </div>\r\n\r\n              <div className=\"input-field\">\r\n                <i className=\"material-icons prefix\">vpn_key</i>\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"red-text\">{authError}</div>\r\n\r\n              <div className=\"input-field\">\r\n                <button className=\"btn z-depth-0 blue darken-2 form-btn waves-effect waves-light\">\r\n                  Sign In\r\n                </button>\r\n              </div>\r\n\r\n              <span className=\"grey-text\">\r\n                Not a member? <Link to=\"/register\">Register</Link>\r\n              </span>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    emailSignIn: credentials => dispatch(emailSignIn(credentials))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { emailRegister } from \"../../store/actions/authActions\";\r\n\r\nclass Register extends Component {\r\n  state = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    error: \"\"\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (this.state.firstName === \"\" || this.state.lastName === \"\") {\r\n      console.log(\"HERE\");\r\n      this.setState({\r\n        ...this.state,\r\n        error: \"First name and last name are required.\"\r\n      });\r\n    } else {\r\n      this.props.emailRegister(this.state);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n    console.log(this.state.error);\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col offset-m2 m8 s12 center\">\r\n            <form onSubmit={this.handleSubmit} className=\"white auth-form\">\r\n              <h5>Register</h5>\r\n\r\n              <div className=\"row\">\r\n                <div className=\"col s12 m6\">\r\n                  <div className=\"input-field\">\r\n                    <i className=\"material-icons prefix\">account_circle</i>\r\n                    <label htmlFor=\"firstName\">First Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"firstName\"\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"col s12 m6\">\r\n                  <div className=\"input-field\">\r\n                    <i className=\"material-icons prefix\"></i>\r\n                    <label htmlFor=\"email\">Last Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"lastName\"\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"input-field\">\r\n                <i className=\"material-icons prefix\">email</i>\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n              </div>\r\n\r\n              <div className=\"input-field\">\r\n                <i className=\"material-icons prefix\">vpn_key</i>\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"input-field\">\r\n                <i className=\"material-icons prefix\"></i>\r\n                <label htmlFor=\"passwordVerify\">Confirm Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  id=\"passwordVerify\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"red-text\">\r\n                {authError ? authError : this.state.error}\r\n              </div>\r\n\r\n              <div className=\"input-field\">\r\n                <button className=\"btn z-depth-0 blue darken-2 form-btn waves-effect waves-light\">\r\n                  Register\r\n                </button>\r\n              </div>\r\n\r\n              <span className=\"grey-text\">\r\n                Already a member? <Link to=\"/signin\">Sign In</Link>\r\n              </span>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    emailRegister: newUser => dispatch(emailRegister(newUser))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\r\n","export const createProject = project => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    // Get states from the store\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const userId = getState().firebase.auth.uid;\r\n\r\n    // Make async db call then dispatch state\r\n    firestore\r\n      .collection(\"projects\")\r\n      .add({\r\n        ...project,\r\n        firstName: profile.firstName,\r\n        lastName: profile.lastName,\r\n        userId: userId,\r\n        createdAt: new Date()\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"CREATE_PROJECT\", project });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"CREATE_PROJECT_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../store/actions/projectActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: \"\",\r\n    content: \"\",\r\n    error: \"\"\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (this.state.title === \"\" || this.state.content === \"\") {\r\n      this.setState({\r\n        ...this.state,\r\n        error: \"Project title and content are required.\"\r\n      });\r\n    } else {\r\n      this.props.createProject(this.state);\r\n      this.props.history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { auth } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n\r\n    return (\r\n      <div className=\"container center\">\r\n        <div className=\"row\">\r\n          <div className=\"col offset-m3 m6 s12\">\r\n            <form onSubmit={this.handleSubmit} className=\"white auth-form\">\r\n              <h5>Create Project</h5>\r\n              <div className=\"grey-text\">to be part of your Portfolio</div>\r\n              <div className=\"input-field\">\r\n                <i className=\"material-icons prefix\">title</i>\r\n                <label htmlFor=\"title\">Project Title</label>\r\n                <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n              </div>\r\n\r\n              <div className=\"input-field\">\r\n                <i className=\"material-icons prefix\">book</i>\r\n                <label htmlFor=\"content\">Project Content</label>\r\n                <textarea\r\n                  id=\"content\"\r\n                  className=\"materialize-textarea\"\r\n                  onChange={this.handleChange}\r\n                ></textarea>\r\n              </div>\r\n\r\n              <div className=\"red-text\">{this.state.error}</div>\r\n\r\n              <div className=\"input-field\">\r\n                <button className=\"btn z-depth-0 blue darken-2 form-btn waves-effect waves-light\">\r\n                  <i className=\"material-icons\">send</i>\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: project => dispatch(createProject(project))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Navbar from \"./components/layout/Navbar\";\r\nimport Footer from \"./components/layout/Footer\";\r\nimport Dashboard from \"./components/dashboard/Dashboard\";\r\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\r\nimport SignIn from \"./components/auth/SignIn\";\r\nimport Register from \"./components/auth/Register\";\r\nimport CreateProject from \"./components/projects/CreateProject\";\r\n\r\nconst App = props => {\r\n  const auth = props.auth;\r\n  if (auth.isLoaded) {\r\n    return (\r\n      <BrowserRouter>\r\n        <div>\r\n          <Navbar />\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Dashboard} />\r\n            <Route path=\"/project/:id\" component={ProjectDetails} />\r\n            <Route path=\"/signin\" component={SignIn} />\r\n            <Route path=\"/register\" component={Register} />\r\n            <Route path=\"/create_project\" component={CreateProject} />\r\n          </Switch>\r\n          <Footer />\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"container center\">\r\n        <div className=\"preloader-wrapper big active preloader-margin\">\r\n          <div className=\"spinner-layer spinner-blue-only\">\r\n            <div className=\"circle-clipper left\">\r\n              <div className=\"circle\"></div>\r\n            </div>\r\n            <div className=\"gap-patch\">\r\n              <div className=\"circle\"></div>\r\n            </div>\r\n            <div className=\"circle-clipper right\">\r\n              <div className=\"circle\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n  authError: null\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_ERROR\":\r\n      console.log(\"LOGIN_ERROR\");\r\n      return {\r\n        ...state,\r\n        authError: action.err.message\r\n      };\r\n\r\n    case \"LOGIN_SUCCESS\":\r\n      console.log(\"LOGIN_SUCCESS\");\r\n\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      };\r\n\r\n    case \"LOGOUT_SUCCESS\":\r\n      console.log(\"LOGOUT_SUCCESS\");\r\n      break;\r\n\r\n    case \"REGISTER_SUCCESS\":\r\n      console.log(\"REGISTER_SUCCESS\");\r\n\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      };\r\n\r\n    case \"REGISTER_ERROR\":\r\n      console.log(\"REGISTER_ERROR\");\r\n\r\n      return {\r\n        ...state,\r\n        authError: action.err.message\r\n      };\r\n\r\n    default:\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nexport default authReducer;\r\n","const initState = {\r\n  projects: [\r\n    { id: 0, title: \"Dummy Title\", content: \"Dummy Content\" },\r\n    { id: 1, title: \"Dummy Title\", content: \"Dummy Content\" },\r\n    { id: 2, title: \"Dummy Title\", content: \"Dummy Content\" }\r\n  ]\r\n};\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"CREATE_PROJECT\":\r\n      console.log(\"Reducer - Created Project\", action.project);\r\n      break;\r\n    case \"CREATE_PROJECT_ERROR\":\r\n      console.log(\"Reducer - Create Project Error\", action.err);\r\n      break;\r\n    default:\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nexport default projectReducer;\r\n","import authReducer from \"./authReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport { combineReducers } from \"redux\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nvar config = {\r\n  apiKey: \"AIzaSyDY48Yo5Fr-nznNVeYXgdp44C7awV4axh8\",\r\n  authDomain: \"profolio-craft.firebaseapp.com\",\r\n  databaseURL: \"https://profolio-craft.firebaseio.com\",\r\n  projectId: \"profolio-craft\",\r\n  storageBucket: \"profolio-craft.appspot.com\",\r\n  messagingSenderId: \"80916112422\",\r\n  appId: \"1:80916112422:web:e83542048559s3559fb32e7\",\r\n  measurementId: \"G-BT4PSV098M\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\nexport default firebase;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport {\n  reduxFirestore,\n  getFirestore,\n  createFirestoreInstance\n} from \"redux-firestore\";\nimport { getFirebase, ReactReduxFirebaseProvider } from \"react-redux-firebase\";\nimport firebaseConfig from \"./config/firebaseConfig\";\nimport firebase from \"firebase/app\";\n\n// Create a redux store with thunk middleware to perform async db calls\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n    reduxFirestore(firebase, firebaseConfig)\n  )\n);\n\n// React redux firebase properties\nconst rrfConfig = {\n  userProfile: 'users',\n  useFirestoreForProfile: true,\n  attachAuthIsReady: true\n};\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n};\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <App />\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}